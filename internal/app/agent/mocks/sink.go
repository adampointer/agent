// Code generated by MockGen. DO NOT EDIT.
// Source: sink.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	eventbus "github.com/adampointer/eventbus"
	gomock "github.com/golang/mock/gomock"
)

// MockSink is a mock of Sink interface.
type MockSink struct {
	ctrl     *gomock.Controller
	recorder *MockSinkMockRecorder
}

// MockSinkMockRecorder is the mock recorder for MockSink.
type MockSinkMockRecorder struct {
	mock *MockSink
}

// NewMockSink creates a new mock instance.
func NewMockSink(ctrl *gomock.Controller) *MockSink {
	mock := &MockSink{ctrl: ctrl}
	mock.recorder = &MockSinkMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSink) EXPECT() *MockSinkMockRecorder {
	return m.recorder
}

// Listen mocks base method.
func (m *MockSink) Listen(ctx context.Context, dataC chan eventbus.Event, errC chan error) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Listen", ctx, dataC, errC)
}

// Listen indicates an expected call of Listen.
func (mr *MockSinkMockRecorder) Listen(ctx, dataC, errC interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Listen", reflect.TypeOf((*MockSink)(nil).Listen), ctx, dataC, errC)
}
